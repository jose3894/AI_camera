FROM raspbian/stretch
COPY qemu-arm-static /usr/bin

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils wget
RUN apt-get install -y build-essential \
                       tk-dev \
                       libncurses5-dev \
                       libncursesw5-dev \
                       libreadline6-dev \
                       libdb5.3-dev \
                       libgdbm-dev \
                       libsqlite3-dev \
                       libssl-dev \
                       libbz2-dev \
                       libexpat1-dev \
                       liblzma-dev \
                       zlib1g-dev \
                       libffi-dev

# Install Python 3.7
RUN wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz
RUN tar xf Python-3.7.2.tar.xz
RUN cd Python-3.7.2 && ./configure && make -j 4 && make altinstall

# Install dependencies
RUN apt-get install -y screen python3-dev \
                              python3-pip \
                              python3-setuptools \
                              python3-numpy \
                              libblas-dev \
                              liblapack-dev \
                              python3-scipy
RUN apt-get update
RUN apt-get install -y screen python3-h5py
RUN apt-get purge libreoffice*
RUN apt-get clean
RUN apt-get autoremove
RUN apt-get -y upgrade

RUN apt-get install -y build-essential cmake pkg-config \
                       libjpeg-dev libtiff5-dev libjasper-dev libpng-dev \
                       libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
                       libxvidcore-dev libx264-dev \
                       libfontconfig1-dev libcairo2-dev \
                       libgdk-pixbuf2.0-dev libpango1.0-dev \
                       libgtk2.0-dev libgtk-3-dev \
                       libfontconfig1-dev libcairo2-dev\
                       libgdk-pixbuf2.0-dev libpango1.0-dev \
                       libgtk2.0-dev libgtk-3-dev \
                       libatlas-base-dev gfortran \
                       libhdf5-dev libhdf5-serial-dev \
                       libqtgui4 libqtwebkit4 libqt4-test python3-pyqt5 \
                       libilmbase-dev libopenexr-dev ibgstreamer1.0-dev \
                       libwebp6 libtiff5 libjasper1 libilmbase12 libopenexr22 \
                       libgstreamer1.0-0 libavcodec57 libswscale4 \
                       libqtcore4 libjpeg62-turbo libavformat57

# Install OpenCV
RUN python3 -m pip install opencv-python
RUN python3 -m pip install opencv-contrib-python
RUN export QT_X11_NO_MITSHM=1

# Upgrade pip and setuptools
RUN python3 -m pip install pip --upgrade
RUN python3 -m pip install setuptools --upgrade

# Install Tensorflow
RUN wget https://www.piwheels.org/simple/tensorflow/tensorflow-1.13.1-cp35-none-linux_armv7l.whl
RUN pip3 install tensorflow-1.13.1-cp35-none-linux_armv7l.whl
RUN python3 -m pip install tensorflow

# Install Flask
RUN python3 -m pip install flask --upgrade

# Install Keras
RUN python3 -m pip install keras --upgrade

## Install Git
RUN apt-get install -y git

## Install go
RUN wget https://dl.google.com/go/go1.13.5.linux-armv6l.tar.gz
RUN tar -C /usr/local -xzf go1.13.5.linux-armv6l.tar.gz

## Create and export your go path.
RUN mkdir ~/go
RUN export GOPATH=~/go

## Download and compile git-lfs.
RUN /usr/local/go/bin/go get github.com/github/git-lfs

## Add the compiled binary to your path.
RUN cp ~/go/bin/git-lfs /usr/local/bin/

## Download project with git-lfs
RUN mkdir /project
RUN cd /project && git init
RUN cd /project && git clone -b dev_VM_Simulation https://github.com/jose3894/AI_camera.git
RUN cd /project && git lfs install
RUN cd /project && git lfs fetch
RUN ls /project
RUN cp -r /project/AI_camera/AI_app /app
#RUN rm -r /project

## Install FFmpeg
#RUN apt-get install -y ffmpeg

#COPY ./AI_app /app

WORKDIR /app

EXPOSE 5000

ENTRYPOINT ["python3"]
CMD ["Testing/predict.py"]
